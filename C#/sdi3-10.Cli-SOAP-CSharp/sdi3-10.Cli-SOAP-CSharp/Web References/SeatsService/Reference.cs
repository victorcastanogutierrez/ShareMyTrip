//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace sdi3_10.Cli_SOAP_CSharp.SeatsService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EjbSeatsServiceServiceSoapBinding", Namespace="http://impl.business.sdi.com/")]
    public partial class EjbSeatsServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback excludeOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback findAdllOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveOperationCompleted;
        
        private System.Threading.SendOrPostCallback findByTripOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateNoSeatOperationCompleted;
        
        private System.Threading.SendOrPostCallback findByUserIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EjbSeatsServiceService() {
            this.Url = global::sdi3_10.Cli_SOAP_CSharp.Properties.Settings.Default.sdi3_10_Cli_SOAP_CSharp_SeatsService_EjbSeatsServiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event excludeCompletedEventHandler excludeCompleted;
        
        /// <remarks/>
        public event cancelCompletedEventHandler cancelCompleted;
        
        /// <remarks/>
        public event findAdllCompletedEventHandler findAdllCompleted;
        
        /// <remarks/>
        public event saveCompletedEventHandler saveCompleted;
        
        /// <remarks/>
        public event findByTripCompletedEventHandler findByTripCompleted;
        
        /// <remarks/>
        public event updateNoSeatCompletedEventHandler updateNoSeatCompleted;
        
        /// <remarks/>
        public event findByUserIdCompletedEventHandler findByUserIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.business.sdi.com/", ResponseNamespace="http://impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void exclude([System.Xml.Serialization.XmlElementAttribute("arg0", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long[] arg0) {
            this.Invoke("exclude", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void excludeAsync(long[] arg0) {
            this.excludeAsync(arg0, null);
        }
        
        /// <remarks/>
        public void excludeAsync(long[] arg0, object userState) {
            if ((this.excludeOperationCompleted == null)) {
                this.excludeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexcludeOperationCompleted);
            }
            this.InvokeAsync("exclude", new object[] {
                        arg0}, this.excludeOperationCompleted, userState);
        }
        
        private void OnexcludeOperationCompleted(object arg) {
            if ((this.excludeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.excludeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.business.sdi.com/", ResponseNamespace="http://impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void cancel([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified) {
            this.Invoke("cancel", new object[] {
                        arg0,
                        arg0Specified,
                        arg1,
                        arg1Specified});
        }
        
        /// <remarks/>
        public void cancelAsync(long arg0, bool arg0Specified, long arg1, bool arg1Specified) {
            this.cancelAsync(arg0, arg0Specified, arg1, arg1Specified, null);
        }
        
        /// <remarks/>
        public void cancelAsync(long arg0, bool arg0Specified, long arg1, bool arg1Specified, object userState) {
            if ((this.cancelOperationCompleted == null)) {
                this.cancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelOperationCompleted);
            }
            this.InvokeAsync("cancel", new object[] {
                        arg0,
                        arg0Specified,
                        arg1,
                        arg1Specified}, this.cancelOperationCompleted, userState);
        }
        
        private void OncancelOperationCompleted(object arg) {
            if ((this.cancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.business.sdi.com/", ResponseNamespace="http://impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public seat[] findAdll() {
            object[] results = this.Invoke("findAdll", new object[0]);
            return ((seat[])(results[0]));
        }
        
        /// <remarks/>
        public void findAdllAsync() {
            this.findAdllAsync(null);
        }
        
        /// <remarks/>
        public void findAdllAsync(object userState) {
            if ((this.findAdllOperationCompleted == null)) {
                this.findAdllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindAdllOperationCompleted);
            }
            this.InvokeAsync("findAdll", new object[0], this.findAdllOperationCompleted, userState);
        }
        
        private void OnfindAdllOperationCompleted(object arg) {
            if ((this.findAdllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findAdllCompleted(this, new findAdllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.business.sdi.com/", ResponseNamespace="http://impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void save([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] seat arg0) {
            this.Invoke("save", new object[] {
                        arg0});
        }
        
        /// <remarks/>
        public void saveAsync(seat arg0) {
            this.saveAsync(arg0, null);
        }
        
        /// <remarks/>
        public void saveAsync(seat arg0, object userState) {
            if ((this.saveOperationCompleted == null)) {
                this.saveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveOperationCompleted);
            }
            this.InvokeAsync("save", new object[] {
                        arg0}, this.saveOperationCompleted, userState);
        }
        
        private void OnsaveOperationCompleted(object arg) {
            if ((this.saveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.business.sdi.com/", ResponseNamespace="http://impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public seat[] findByTrip([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified) {
            object[] results = this.Invoke("findByTrip", new object[] {
                        arg0,
                        arg0Specified});
            return ((seat[])(results[0]));
        }
        
        /// <remarks/>
        public void findByTripAsync(long arg0, bool arg0Specified) {
            this.findByTripAsync(arg0, arg0Specified, null);
        }
        
        /// <remarks/>
        public void findByTripAsync(long arg0, bool arg0Specified, object userState) {
            if ((this.findByTripOperationCompleted == null)) {
                this.findByTripOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindByTripOperationCompleted);
            }
            this.InvokeAsync("findByTrip", new object[] {
                        arg0,
                        arg0Specified}, this.findByTripOperationCompleted, userState);
        }
        
        private void OnfindByTripOperationCompleted(object arg) {
            if ((this.findByTripCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findByTripCompleted(this, new findByTripCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.business.sdi.com/", ResponseNamespace="http://impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateNoSeat([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg1Specified) {
            this.Invoke("updateNoSeat", new object[] {
                        arg0,
                        arg0Specified,
                        arg1,
                        arg1Specified});
        }
        
        /// <remarks/>
        public void updateNoSeatAsync(long arg0, bool arg0Specified, long arg1, bool arg1Specified) {
            this.updateNoSeatAsync(arg0, arg0Specified, arg1, arg1Specified, null);
        }
        
        /// <remarks/>
        public void updateNoSeatAsync(long arg0, bool arg0Specified, long arg1, bool arg1Specified, object userState) {
            if ((this.updateNoSeatOperationCompleted == null)) {
                this.updateNoSeatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateNoSeatOperationCompleted);
            }
            this.InvokeAsync("updateNoSeat", new object[] {
                        arg0,
                        arg0Specified,
                        arg1,
                        arg1Specified}, this.updateNoSeatOperationCompleted, userState);
        }
        
        private void OnupdateNoSeatOperationCompleted(object arg) {
            if ((this.updateNoSeatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateNoSeatCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://impl.business.sdi.com/", ResponseNamespace="http://impl.business.sdi.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public seat[] findByUserId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool arg0Specified) {
            object[] results = this.Invoke("findByUserId", new object[] {
                        arg0,
                        arg0Specified});
            return ((seat[])(results[0]));
        }
        
        /// <remarks/>
        public void findByUserIdAsync(long arg0, bool arg0Specified) {
            this.findByUserIdAsync(arg0, arg0Specified, null);
        }
        
        /// <remarks/>
        public void findByUserIdAsync(long arg0, bool arg0Specified, object userState) {
            if ((this.findByUserIdOperationCompleted == null)) {
                this.findByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindByUserIdOperationCompleted);
            }
            this.InvokeAsync("findByUserId", new object[] {
                        arg0,
                        arg0Specified}, this.findByUserIdOperationCompleted, userState);
        }
        
        private void OnfindByUserIdOperationCompleted(object arg) {
            if ((this.findByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findByUserIdCompleted(this, new findByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://impl.business.sdi.com/")]
    public partial class seat {
        
        private string commentField;
        
        private seatStatus statusField;
        
        private bool statusFieldSpecified;
        
        private long tripIdField;
        
        private bool tripIdFieldSpecified;
        
        private long userIdField;
        
        private bool userIdFieldSpecified;
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public seatStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long tripId {
            get {
                return this.tripIdField;
            }
            set {
                this.tripIdField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tripIdSpecified {
            get {
                return this.tripIdFieldSpecified;
            }
            set {
                this.tripIdFieldSpecified = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <comentarios/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool userIdSpecified {
            get {
                return this.userIdFieldSpecified;
            }
            set {
                this.userIdFieldSpecified = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://impl.business.sdi.com/")]
    public enum seatStatus {
        
        /// <comentarios/>
        ACCEPTED,
        
        /// <comentarios/>
        EXCLUDED,
        
        /// <comentarios/>
        NO_SEAT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void excludeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void cancelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findAdllCompletedEventHandler(object sender, findAdllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findAdllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findAdllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public seat[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((seat[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void saveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findByTripCompletedEventHandler(object sender, findByTripCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findByTripCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findByTripCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public seat[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((seat[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void updateNoSeatCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void findByUserIdCompletedEventHandler(object sender, findByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public seat[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((seat[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591